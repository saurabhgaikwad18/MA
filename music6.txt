section .data
space db " "
bmsg db 10,"Before Transfer: "
bmsg_len equ $-bmsg
amsg db 10,"After Transfer: "
amsg_len equ $-amsg
smsg db 10,"Source Block: "
smsg_len equ $-smsg
dmsg db 10,"Destination Block: "
dmsg_len equ $-dmsg
sblock db 11h,22h,33h,44h,55h
dblock times 5 db 0
section .bss
char_ans resb 2
%macro print 2
mov rax,1
mov rdi,1
mov rsi,%1
mov rdx,%2
syscall
%endmacro
%macro read 2
mov rax,0
mov rdi,0
mov rsi,%1
mov rdx,%2
syscall
%endmacro
%macro exit 0
mov rax,60
mov rdi,0
syscall
%endmacro
section .text
global _start
_start:
print bmsg,bmsg_len
print smsg,smsg_len
mov rsi,sblock
call disp_block
print dmsg,dmsg_len
mov rsi,dblock
call disp_block
call Block
print amsg,amsg_len
print smsg,smsg_len
mov rsi,sblock
call disp_block
print dmsg,dmsg_len
mov rsi,dblock
call disp_block
exit
Block:
mov rsi,sblock
mov rdi,dblock
mov rcx,5
back: mov al,[rsi]
mov [rdi],al
inc rsi
inc rdi
dec rcx
jnz back
ret
disp_block:
mov rbp,5
next_num:
mov al,[rsi]
push rsi
call display
print space,1
pop rsi
inc rsi
dec rbp
jnz next_num
ret
display:
mov rbx,16
mov rcx,2
mov rsi,char_ans + 1
next_digit:
mov rdx,0
div rbx
cmp dl,9
jbe add30
add dl,07H
add30 :
add dl,30H
mov [rsi],dl
dec rsi
dec rcx
jnz next_digit
print char_ans,2
ret